From f6fb5a05006840b0e2dcbeb3a30c961f06a9cfc7 Mon Sep 17 00:00:00 2001
From: Jonas Spinner <jonas.spinner@student.kit.edu>
Date: Wed, 29 Jan 2020 15:12:04 +0100
Subject: [PATCH 4/4] Removed ArgPack singleton instance

---
 src/ArgPack.cpp |  8 ++------
 src/ArgPack.h   | 22 ++--------------------
 src/InitError.h |  8 +++++---
 src/main.cpp    |  6 +++---
 4 files changed, 12 insertions(+), 32 deletions(-)

diff --git a/src/ArgPack.cpp b/src/ArgPack.cpp
index 0ebaa9f..c6a53c8 100644
--- a/src/ArgPack.cpp
+++ b/src/ArgPack.cpp
@@ -13,15 +13,13 @@
 #include <unistd.h> // for getopt
 #include <iostream>
 
-extern int optind;
+
 
 using namespace std;
 
 namespace ils_mwis
 {
 
-ArgPack *ArgPack::def_ap_ = 0;
-
 ArgPack::ArgPack() :
         verbose(true),
         rand_seed(1),
@@ -38,9 +36,6 @@ ArgPack::ArgPack(int argc, char * const argv []) :
 	iterations(2000000),
 	p{2,4,4,1}
 {
-
-	assert(!def_ap_);
-	def_ap_ = this;
 	program_name = argv[0];
 
 	string usage = string("Usage: ") + program_name + " [options] <file>\n" +
@@ -65,6 +60,7 @@ ArgPack::ArgPack(int argc, char * const argv []) :
 	{
 		switch (ch)
 		{
+        default:
 		case 'h':
 			throw InitError(usage);
 		case 'W':
diff --git a/src/ArgPack.h b/src/ArgPack.h
index cf5fc9a..ff2e9d3 100644
--- a/src/ArgPack.h
+++ b/src/ArgPack.h
@@ -10,7 +10,6 @@
 #define ARGPACK_H_
 
 #include <string>
-#include <assert.h>
 
 namespace ils_mwis {
 
@@ -24,7 +23,7 @@ public:
 
 	bool verbose;
 
-	long rand_seed;
+	unsigned long rand_seed;
 
 	int target;
 
@@ -36,28 +35,11 @@ public:
 
 	double p[4]; // intensification/exploration parameters
 
-	//------------
-	// singleton functions
-	//------------
-
-	static const ArgPack &ap() { assert(def_ap_); return *def_ap_; }
-
-//	static ArgPack &write_ap() { assert(def_ap_); return *def_ap_; }
-
 	ArgPack();
 
 	ArgPack(int argc, char * const argv []);
 
-	~ArgPack() { assert(def_ap_); def_ap_ = 0; }
-
-private:
-
-	//------------
-	// singleton instance
-	//------------
-
-	static ArgPack *def_ap_;
-
+	~ArgPack() = default;
 };
 
 }
diff --git a/src/InitError.h b/src/InitError.h
index 71f7cf6..3b052a2 100644
--- a/src/InitError.h
+++ b/src/InitError.h
@@ -1,3 +1,5 @@
+#include <utility>
+
 /*
  *
  * InitError: initialization exception class
@@ -15,11 +17,11 @@ class InitError : public std::exception
 
 public:
 
-	InitError(const std::string & err) : what_(ArgPack::ap().program_name + ": " + err) {}
+	explicit InitError(std::string  err) : what_(std::move(err)) {}
 
-	virtual ~InitError() throw () {}
+	~InitError() noexcept override = default;
 
-	virtual const char * what() const throw () { return what_.c_str(); }
+	const char * what() const noexcept override { return what_.c_str(); }
 
 private:
 
diff --git a/src/main.cpp b/src/main.cpp
index e3743b0..ac444bd 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -112,12 +112,12 @@ int main(int argc, char *argv[])
 
 		// set the random seed
 
-		ils_mwis::generator.seed(ils_mwis::ArgPack::ap().rand_seed);
+		ils_mwis::generator.seed(single_ap.rand_seed);
 
 		// read instance
-		ils_mwis::Graph *graph_instance = ils_mwis::readInstance(ils_mwis::ArgPack::ap().input_name, ils_mwis::ArgPack::ap().complement);
+		ils_mwis::Graph *graph_instance = ils_mwis::readInstance(single_ap.input_name, single_ap.complement);
 
-		ils_mwis::Solution s = solve(graph_instance, ils_mwis::ArgPack::ap());
+		ils_mwis::Solution s = solve(graph_instance, single_ap);
 
 		delete(graph_instance);
 
-- 
2.20.1

